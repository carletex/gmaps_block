<?php
/**
 * Implements hook_help.
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */

function gmaps_block_help($path, $arg) {
	switch ($path) {
		case "admin/help#gmaps_block":
			return '<p>' . t("To add a new GMaps block, use the 'Add GMap' link on the administer blocks page.") . '</p>';
			break;
	  }
}

/**
 * Implements hook_menu().
 */

function gmaps_block_menu() {
    $items['admin/structure/block/add-gmaps-block'] = array(
      'title' => 'Add GMaps block',
      'description' => 'Add a new GMaps block.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('gmaps_block_add_block_form'),
      'access arguments' => array('administer blocks'),
      'type' => MENU_LOCAL_ACTION,
    );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function gmaps_block_block_info() {
  $blocks = array();
  $deltas = variable_get('gmaps_block_ids', array());

  foreach ($deltas AS $delta) {
    $title = db_query("SELECT title FROM {block} WHERE module = :module AND delta = :delta",
                       array(':module' => 'gmaps_block', ':delta' => $delta))->fetchField();
    $blocks[$delta]['info'] = check_plain($title);
    $blocks[$delta]['cache'] = DRUPAL_NO_CACHE;
  }
  return $blocks;
}

/**
 * Menu callback: display the GMap block addition form.
 *
 */
function gmaps_block_add_block_form($form, &$form_state) {
  module_load_include('inc', 'block', 'block.admin');
  $form = block_admin_configure($form, $form_state, 'gmaps_block', NULL);

  // Other modules should be able to use hook_form_block_add_block_form_alter()
  // to modify this form, so add a base form ID.
  //$form_state['build_info']['base_form_id'] = 'block_add_block_form';

  // Prevent block_add_block_form_validate/submit() from being automatically
  // added because of the base form ID by providing these handlers manually.
  //$form['#validate'] = array();
  $form['#submit'] = array('gmaps_block_add_block_form_submit');

  return $form;
}

/**
 * Save the new menu block.
 */
function gmaps_block_add_block_form_submit($form, &$form_state) {
  // Determine the delta of the new block.
  $block_ids = variable_get('gmaps_block_ids', array());
  $delta = empty($block_ids) ? 1 : max($block_ids) + 1;
  $form_state['values']['delta'] = $delta;

  // Save the new array of blocks IDs.
  $block_ids[] = $delta;
  variable_set('gmaps_block_ids', $block_ids);

  // Save the block configuration.
  gmaps_block_block_save($delta, $form_state['values']);

  // Run the normal new block submission (borrowed from block_add_block_form_submit).
  $query = db_insert('block')->fields(array('visibility', 'pages', 'custom', 'title', 'module', 'theme', 'region', 'status', 'weight', 'delta', 'cache'));
  foreach (list_themes() as $key => $theme) {
    if ($theme->status) {
      $region = !empty($form_state['values']['regions'][$theme->name]) ? $form_state['values']['regions'][$theme->name] : BLOCK_REGION_NONE;
      $query->values(array(
        'visibility' => (int) $form_state['values']['visibility'],
        'pages' => trim($form_state['values']['pages']),
        'custom' => (int) $form_state['values']['custom'],
        'title' => $form_state['values']['title'],
        'module' => $form_state['values']['module'],
        'theme' => $theme->name,
        'region' => ($region == BLOCK_REGION_NONE ? '' : $region),
        'status' => 0,
        'status' => (int) ($region != BLOCK_REGION_NONE),
        'weight' => 0,
        'delta' => $delta,
        'cache' => DRUPAL_NO_CACHE,
      ));
    }
  }
  $query->execute();

  /*$query = db_insert('block_role')->fields(array('rid', 'module', 'delta'));
  foreach (array_filter($form_state['values']['roles']) as $rid) {
    $query->values(array(
      'rid' => $rid,
      'module' => $form_state['values']['module'],
      'delta' => $delta,
    ));
  }
  $query->execute();*/

  drupal_set_message(t('The block has been created.'));
  cache_clear_all();
  $form_state['redirect'] = 'admin/structure/block';
}

/**
 * Implements hook_block_configure().
 */
function gmaps_block_block_configure($delta = '') {

  $form = array();
  // All we need to provide is the specific configuration options for our
  // block. Drupal will take care of the standard block configuration options
  // (block title, page visibility, etc.) and the save button.
  $form['latitude'] = array(
    '#type' => 'textfield',
    '#title' => t('Latitude'),
    '#size' => 30,
    '#description' => t('Location latitude.'),
    '#default_value' => variable_get("gmaps_block_{$delta}_latitude"),
  );
  $form['altitude'] = array(
    '#type' => 'textfield',
    '#title' => t('Altitude'),
    '#size' => 30,
    '#description' => t('Location altitude.'),
    '#default_value' => variable_get("gmaps_block_{$delta}_altitude"),
  );

  return $form;

}

/**
 * Implements hook_block_save().
 */
function gmaps_block_block_save($delta = '', $edit = array()) {
  if (!empty($delta)) {
    if (empty($config['exported_to_code'])) {
      variable_set("gmaps_block_{$delta}_latitude", $edit['latitude']);
      variable_set("gmaps_block_{$delta}_altitude", $edit['altitude']);
    }
  }
}

/**
 * Returns the configuration for the requested block delta.
 *
 * @param $delta
 *   string The delta that uniquely identifies the block in the block system. If
 *   not specified, the default configuration will be returned.
 * @return
 *   array An associated array of configuration options.
 */
function gmaps_block_get_config($delta = NULL) {

  $config = array(
    'delta'    => $delta,
    'title'    => '',
    'latitude' => 0,
    'altitude' => 0,
  );

  // Get the block configuration options.
  if ($delta) {
    $config['title'] = db_query("SELECT title FROM {block} WHERE module = :module AND delta = :delta",
                       array(':module' => 'gmaps_block', ':delta' => $delta))->fetchField();
    $config['latitude']  = variable_get("gmaps_block_{$delta}_latitude",  $config['latitude']);
    $config['altitude'] = variable_get("gmaps_block_{$delta}_altitude", $config['altitude']);
  }

  return $config;
}

/**
 * Implements hook_block_view().
 */
function gmaps_block_block_view($delta = '') {
  $data = gmaps_block_get_config($delta);

  $block['subject'] = $data['title'];
  $block['content'] = 'latidud -> ' . $data['latitude'] . ' altitud -> ' . $data['altitude'];

  return $block;
}